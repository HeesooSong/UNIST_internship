geom_text(aes(y = (freq + 1000), label = freq, fontface = 2), size=5) +
labs(title = "Number of Spots in Each Channel")
dev.off()
# Average intensity/sigma of spots in each channel
avg_int_prep <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
avg_sig_prep <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma")]
avg_sig_prep[avg_sig_prep == 0] <- NA
avg_int <- apply(avg_int_prep, 2, mean, na.rm = TRUE)
avg_sig <- apply(avg_sig_prep, 2, mean, na.rm = TRUE)
df_avg_int <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Intensity = avg_int)
df_avg_sig <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Sigma = avg_sig)
df_avg_int$Average_Intensity <- round(df_avg_int$Average_Intensity,2)
df_avg_sig$Average_Sigma <- round(df_avg_sig$Average_Sigma,2)
pdf(file = paste0(vis_path, "avg_int_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_int, aes(x = Channel, y = Average_Intensity)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Intensity + 1000), label = Average_Intensity, fontface = 2), size=5) +
labs(title = "Average Intensity in Each Channel")
dev.off()
pdf(file = paste0(vis_path, "avg_sig_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_sig, aes(x = Channel, y = Average_Sigma)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Sigma + 3), label = Average_Sigma, fontface = 2), size=5) +
labs(title = "Average Sigma in Each Channel")
dev.off()
# Compare Intensity/Sigma distribution in channels
multi_sig_dist <- avg_sig_prep %>% melt()
multi_sig_dist <- multi_sig_dist[which(multi_sig_dist$value > 0),]
cdat <- ddply(multi_sig_dist, "variable", summarise, rating.mean = mean(value))
#CI_low <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[1]))
#CI_high <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[2]))
pdf(file = paste0(vis_path, "sigma_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=5, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("sigma")
#geom_vline(data = CI_low, aes(xintercept=CI, colour = variable), size = 0.5) +
#geom_vline(data = CI_high, aes(xintercept=CI, colour = variable), size = 0.5)
dev.off()
pdf(file = paste0(vis_path, "sigma_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
multi_int_dist <- avg_int_prep %>% melt()
multi_int_dist <- multi_int_dist[c(rownames(multi_sig_dist)),]
cdat <- ddply(multi_int_dist, "variable", summarise, rating.mean = mean(value))
pdf(file = paste0(vis_path, "intensity_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=1000, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("intensity")
dev.off()
pdf(file = paste0(vis_path, "intensity_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
#base = "C:/Users/user/Desktop/UNIST_internship/Sample_Image/Positive/PB417_01/"
base = "C:/Users/pc/Desktop/UNIST_internship/20221123_Pos10_Neg10/Negative/PB1899_05/"
#base = "C:/Users/user/Desktop/20221123_Pos10_Neg10/Positive/PB465_01/"
vis_path = paste0(base, "analysis/")
#file = "Spot_matching_result_imputated.csv"
file = "Spot_matching_result.csv"
#######################################################
# Explore data
#######################################################
df_match <- read.csv(paste0(base, file))
print(colnames(df_match))
# Limit Ranges:
# 1. Limit sigma (30<sigma<250)
index_C1 <- which(df_match$C1_sigma < 30 | df_match$C1_sigma > 250)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_sigma < 30 | df_match$C2_sigma > 250)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_sigma < 30 | df_match$C3_sigma > 250)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_sigma < 30 | df_match$C4_sigma > 250)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 2. Limit intensity (intensity > 1000)
index_C1 <- which(df_match$C1_int < 1000)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_int < 1000)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_int < 1000)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_int < 1000)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 3. Remove positions that the spot is out of range in all channels
df_match <- df_match[!(df_match$C1_sigma==0 & df_match$C2_sigma==0 & df_match$C3_sigma==0 & df_match$C4_sigma==0),]
df_meta <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma", "C1_int", "C2_int", "C3_int", "C4_int")]
#df_meta <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
# Pair plot
pdf(file = paste0(vis_path, "pairs_plot.pdf"), width = 7, height = 7)
pairs(df_meta)
dev.off()
# Venn Diagram
C1 <- df_match[!is.na(df_match$C1_id), "X"]
C2 <- df_match[!is.na(df_match$C2_id), "X"]
C3 <- df_match[!is.na(df_match$C3_id), "X"]
C4 <- df_match[!is.na(df_match$C4_id), "X"]
myCol <- brewer.pal(4, "Set1")
# Chart
venn.diagram(
x = list(C1, C2, C3, C4),
category.names = c("C1" , "C2 " , "C3", "C4"),
filename = paste0(vis_path, 'venn_diagram.png'),
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135),
#cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
#rotation = 1
)
# Number of spots in each channel
n_spots <- data.frame(channel = c('C1', 'C2', 'C3', 'C4'), freq = c(length(C1), length(C2), length(C3), length(C4)))
pdf(file = paste0(vis_path, "n_spots_each_channel.pdf"), width = 8, height = 6)
ggplot(n_spots, aes(x = channel, y = freq)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (freq + 1000), label = freq, fontface = 2), size=5) +
labs(title = "Number of Spots in Each Channel")
dev.off()
# Average intensity/sigma of spots in each channel
avg_int_prep <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
avg_sig_prep <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma")]
avg_sig_prep[avg_sig_prep == 0] <- NA
avg_int <- apply(avg_int_prep, 2, mean, na.rm = TRUE)
avg_sig <- apply(avg_sig_prep, 2, mean, na.rm = TRUE)
df_avg_int <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Intensity = avg_int)
df_avg_sig <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Sigma = avg_sig)
df_avg_int$Average_Intensity <- round(df_avg_int$Average_Intensity,2)
df_avg_sig$Average_Sigma <- round(df_avg_sig$Average_Sigma,2)
pdf(file = paste0(vis_path, "avg_int_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_int, aes(x = Channel, y = Average_Intensity)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Intensity + 1000), label = Average_Intensity, fontface = 2), size=5) +
labs(title = "Average Intensity in Each Channel")
dev.off()
pdf(file = paste0(vis_path, "avg_sig_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_sig, aes(x = Channel, y = Average_Sigma)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Sigma + 3), label = Average_Sigma, fontface = 2), size=5) +
labs(title = "Average Sigma in Each Channel")
dev.off()
# Compare Intensity/Sigma distribution in channels
multi_sig_dist <- avg_sig_prep %>% melt()
multi_sig_dist <- multi_sig_dist[which(multi_sig_dist$value > 0),]
cdat <- ddply(multi_sig_dist, "variable", summarise, rating.mean = mean(value))
#CI_low <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[1]))
#CI_high <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[2]))
pdf(file = paste0(vis_path, "sigma_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=5, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("sigma")
#geom_vline(data = CI_low, aes(xintercept=CI, colour = variable), size = 0.5) +
#geom_vline(data = CI_high, aes(xintercept=CI, colour = variable), size = 0.5)
dev.off()
pdf(file = paste0(vis_path, "sigma_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
multi_int_dist <- avg_int_prep %>% melt()
multi_int_dist <- multi_int_dist[c(rownames(multi_sig_dist)),]
cdat <- ddply(multi_int_dist, "variable", summarise, rating.mean = mean(value))
pdf(file = paste0(vis_path, "intensity_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=1000, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("intensity")
dev.off()
pdf(file = paste0(vis_path, "intensity_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
#base = "C:/Users/user/Desktop/UNIST_internship/Sample_Image/Positive/PB417_01/"
base = "C:/Users/pc/Desktop/UNIST_internship/20221123_Pos10_Neg10/Negative/PB1918_05/"
#base = "C:/Users/user/Desktop/20221123_Pos10_Neg10/Positive/PB465_01/"
vis_path = paste0(base, "analysis/")
#file = "Spot_matching_result_imputated.csv"
file = "Spot_matching_result.csv"
#######################################################
# Explore data
#######################################################
df_match <- read.csv(paste0(base, file))
print(colnames(df_match))
# Limit Ranges:
# 1. Limit sigma (30<sigma<250)
index_C1 <- which(df_match$C1_sigma < 30 | df_match$C1_sigma > 250)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_sigma < 30 | df_match$C2_sigma > 250)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_sigma < 30 | df_match$C3_sigma > 250)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_sigma < 30 | df_match$C4_sigma > 250)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 2. Limit intensity (intensity > 1000)
index_C1 <- which(df_match$C1_int < 1000)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_int < 1000)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_int < 1000)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_int < 1000)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 3. Remove positions that the spot is out of range in all channels
df_match <- df_match[!(df_match$C1_sigma==0 & df_match$C2_sigma==0 & df_match$C3_sigma==0 & df_match$C4_sigma==0),]
df_meta <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma", "C1_int", "C2_int", "C3_int", "C4_int")]
#df_meta <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
# Pair plot
pdf(file = paste0(vis_path, "pairs_plot.pdf"), width = 7, height = 7)
pairs(df_meta)
dev.off()
# Venn Diagram
C1 <- df_match[!is.na(df_match$C1_id), "X"]
C2 <- df_match[!is.na(df_match$C2_id), "X"]
C3 <- df_match[!is.na(df_match$C3_id), "X"]
C4 <- df_match[!is.na(df_match$C4_id), "X"]
myCol <- brewer.pal(4, "Set1")
# Chart
venn.diagram(
x = list(C1, C2, C3, C4),
category.names = c("C1" , "C2 " , "C3", "C4"),
filename = paste0(vis_path, 'venn_diagram.png'),
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135),
#cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
#rotation = 1
)
# Number of spots in each channel
n_spots <- data.frame(channel = c('C1', 'C2', 'C3', 'C4'), freq = c(length(C1), length(C2), length(C3), length(C4)))
pdf(file = paste0(vis_path, "n_spots_each_channel.pdf"), width = 8, height = 6)
ggplot(n_spots, aes(x = channel, y = freq)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (freq + 1000), label = freq, fontface = 2), size=5) +
labs(title = "Number of Spots in Each Channel")
dev.off()
# Average intensity/sigma of spots in each channel
avg_int_prep <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
avg_sig_prep <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma")]
avg_sig_prep[avg_sig_prep == 0] <- NA
avg_int <- apply(avg_int_prep, 2, mean, na.rm = TRUE)
avg_sig <- apply(avg_sig_prep, 2, mean, na.rm = TRUE)
df_avg_int <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Intensity = avg_int)
df_avg_sig <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Sigma = avg_sig)
df_avg_int$Average_Intensity <- round(df_avg_int$Average_Intensity,2)
df_avg_sig$Average_Sigma <- round(df_avg_sig$Average_Sigma,2)
pdf(file = paste0(vis_path, "avg_int_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_int, aes(x = Channel, y = Average_Intensity)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Intensity + 1000), label = Average_Intensity, fontface = 2), size=5) +
labs(title = "Average Intensity in Each Channel")
dev.off()
pdf(file = paste0(vis_path, "avg_sig_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_sig, aes(x = Channel, y = Average_Sigma)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Sigma + 3), label = Average_Sigma, fontface = 2), size=5) +
labs(title = "Average Sigma in Each Channel")
dev.off()
# Compare Intensity/Sigma distribution in channels
multi_sig_dist <- avg_sig_prep %>% melt()
multi_sig_dist <- multi_sig_dist[which(multi_sig_dist$value > 0),]
cdat <- ddply(multi_sig_dist, "variable", summarise, rating.mean = mean(value))
#CI_low <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[1]))
#CI_high <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[2]))
pdf(file = paste0(vis_path, "sigma_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=5, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("sigma")
#geom_vline(data = CI_low, aes(xintercept=CI, colour = variable), size = 0.5) +
#geom_vline(data = CI_high, aes(xintercept=CI, colour = variable), size = 0.5)
dev.off()
pdf(file = paste0(vis_path, "sigma_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
multi_int_dist <- avg_int_prep %>% melt()
multi_int_dist <- multi_int_dist[c(rownames(multi_sig_dist)),]
cdat <- ddply(multi_int_dist, "variable", summarise, rating.mean = mean(value))
pdf(file = paste0(vis_path, "intensity_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=1000, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("intensity")
dev.off()
pdf(file = paste0(vis_path, "intensity_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
#base = "C:/Users/user/Desktop/UNIST_internship/Sample_Image/Positive/PB417_01/"
base = "C:/Users/pc/Desktop/UNIST_internship/20221123_Pos10_Neg10/Negative/PB1969_01/"
#base = "C:/Users/user/Desktop/20221123_Pos10_Neg10/Positive/PB465_01/"
vis_path = paste0(base, "analysis/")
#file = "Spot_matching_result_imputated.csv"
file = "Spot_matching_result.csv"
#######################################################
# Explore data
#######################################################
df_match <- read.csv(paste0(base, file))
print(colnames(df_match))
# Limit Ranges:
# 1. Limit sigma (30<sigma<250)
index_C1 <- which(df_match$C1_sigma < 30 | df_match$C1_sigma > 250)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_sigma < 30 | df_match$C2_sigma > 250)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_sigma < 30 | df_match$C3_sigma > 250)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_sigma < 30 | df_match$C4_sigma > 250)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 2. Limit intensity (intensity > 1000)
index_C1 <- which(df_match$C1_int < 1000)
df_match$C1_sigma[index_C1] <- 0
df_match$C1_int[index_C1] <- 0
index_C2 <- which(df_match$C2_int < 1000)
df_match$C2_sigma[index_C2] <- 0
df_match$C2_int[index_C2] <- 0
index_C3 <- which(df_match$C3_int < 1000)
df_match$C3_sigma[index_C3] <- 0
df_match$C3_int[index_C3] <- 0
index_C4 <- which(df_match$C4_int < 1000)
df_match$C4_sigma[index_C4] <- 0
df_match$C4_int[index_C4] <- 0
# 3. Remove positions that the spot is out of range in all channels
df_match <- df_match[!(df_match$C1_sigma==0 & df_match$C2_sigma==0 & df_match$C3_sigma==0 & df_match$C4_sigma==0),]
df_meta <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma", "C1_int", "C2_int", "C3_int", "C4_int")]
#df_meta <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
# Pair plot
pdf(file = paste0(vis_path, "pairs_plot.pdf"), width = 7, height = 7)
pairs(df_meta)
dev.off()
# Venn Diagram
C1 <- df_match[!is.na(df_match$C1_id), "X"]
C2 <- df_match[!is.na(df_match$C2_id), "X"]
C3 <- df_match[!is.na(df_match$C3_id), "X"]
C4 <- df_match[!is.na(df_match$C4_id), "X"]
myCol <- brewer.pal(4, "Set1")
# Chart
venn.diagram(
x = list(C1, C2, C3, C4),
category.names = c("C1" , "C2 " , "C3", "C4"),
filename = paste0(vis_path, 'venn_diagram.png'),
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
#cat.pos = c(-27, 27, 135),
#cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
#rotation = 1
)
# Number of spots in each channel
n_spots <- data.frame(channel = c('C1', 'C2', 'C3', 'C4'), freq = c(length(C1), length(C2), length(C3), length(C4)))
pdf(file = paste0(vis_path, "n_spots_each_channel.pdf"), width = 8, height = 6)
ggplot(n_spots, aes(x = channel, y = freq)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (freq + 1000), label = freq, fontface = 2), size=5) +
labs(title = "Number of Spots in Each Channel")
dev.off()
# Average intensity/sigma of spots in each channel
avg_int_prep <- df_match[,c("C1_int", "C2_int", "C3_int", "C4_int")]
avg_sig_prep <- df_match[,c("C1_sigma", "C2_sigma", "C3_sigma", "C4_sigma")]
avg_sig_prep[avg_sig_prep == 0] <- NA
avg_int <- apply(avg_int_prep, 2, mean, na.rm = TRUE)
avg_sig <- apply(avg_sig_prep, 2, mean, na.rm = TRUE)
df_avg_int <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Intensity = avg_int)
df_avg_sig <- data.frame(Channel = c('C1', 'C2', 'C3', 'C4'), Average_Sigma = avg_sig)
df_avg_int$Average_Intensity <- round(df_avg_int$Average_Intensity,2)
df_avg_sig$Average_Sigma <- round(df_avg_sig$Average_Sigma,2)
pdf(file = paste0(vis_path, "avg_int_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_int, aes(x = Channel, y = Average_Intensity)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Intensity + 1000), label = Average_Intensity, fontface = 2), size=5) +
labs(title = "Average Intensity in Each Channel")
dev.off()
pdf(file = paste0(vis_path, "avg_sig_histogram.pdf"), width = 8, height = 6)
ggplot(df_avg_sig, aes(x = Channel, y = Average_Sigma)) +
geom_bar(position = "dodge", stat="identity", width=1, color = "white") +
theme_bw() +
theme(plot.title = element_text(size=20, hjust=0.5, face = "bold")) +
geom_text(aes(y = (Average_Sigma + 3), label = Average_Sigma, fontface = 2), size=5) +
labs(title = "Average Sigma in Each Channel")
dev.off()
# Compare Intensity/Sigma distribution in channels
multi_sig_dist <- avg_sig_prep %>% melt()
multi_sig_dist <- multi_sig_dist[which(multi_sig_dist$value > 0),]
cdat <- ddply(multi_sig_dist, "variable", summarise, rating.mean = mean(value))
#CI_low <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[1]))
#CI_high <- ddply(multi_sig_dist, "variable", summarise, CI = as.numeric(t.test(value, conf.level = 0.95)[4]$conf.int[2]))
pdf(file = paste0(vis_path, "sigma_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=5, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("sigma")
#geom_vline(data = CI_low, aes(xintercept=CI, colour = variable), size = 0.5) +
#geom_vline(data = CI_high, aes(xintercept=CI, colour = variable), size = 0.5)
dev.off()
pdf(file = paste0(vis_path, "sigma_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_sig_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
multi_int_dist <- avg_int_prep %>% melt()
multi_int_dist <- multi_int_dist[c(rownames(multi_sig_dist)),]
cdat <- ddply(multi_int_dist, "variable", summarise, rating.mean = mean(value))
pdf(file = paste0(vis_path, "intensity_distribution_histogram.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x = value, fill = variable)) +
geom_histogram(binwidth=1000, alpha = .5, position = "identity")+
geom_vline(data = cdat, aes(xintercept=rating.mean, colour = variable),linetype = "dashed", size = 1) +
xlab("intensity")
dev.off()
pdf(file = paste0(vis_path, "intensity_distribution_barplot.pdf"), width = 8, height = 6)
ggplot(multi_int_dist, aes(x=variable, y=value, color=variable)) +
geom_boxplot() +
theme_bw()
dev.off()
